package de.weltraumschaf.exploit.javael;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

public final class CheckCaseValidator implements ConstraintValidator<CheckCase, String> {

    private CaseMode caseMode;

    @Override
    public void initialize(CheckCase constraintAnnotation) {
        this.caseMode = constraintAnnotation.value();
    }

    @Override
    public boolean isValid(String object, ConstraintValidatorContext constraintContext) {
        if (object == null) {
            return true;
        }

        boolean isValid;
        String message = object;

        if (caseMode == CaseMode.UPPER) {
            isValid = object.equals(object.toUpperCase());
            message = message + " should be in upper case.";
        } else {
            isValid = object.equals(object.toLowerCase());
            message = message + " should be in lower case.";
        }

        if (!isValid) {
            constraintContext.disableDefaultConstraintViolation();
            constraintContext.buildConstraintViolationWithTemplate(message)
                .addConstraintViolation();
        }

        return isValid;
    }
}